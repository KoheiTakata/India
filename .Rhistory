f_long_rhs  <- str_c(coef_lasso[,1], collapse = " + ")
f_long_c    <- as.formula(str_c("oos_g_5to14 ~ ", f_long_rhs))
data_rel <- data[, c("oos_g_5to14",coef_lasso[,1])]
relative_imp <- calc.relimp(f_long_c,data=data_rel,
type = c("lmg"), rela = TRUE, na.omit=TRUE )
library(rwa)
install.packages("devtools")
install.packages("devtools")
devtools::install_github("martinctc/rwa")
devtools::install_github("martinctc/rwa")
install.packages("devtools")
install.packages("devtools")
library(devtools)
help(varImp)
??varImp
knitr::opts_chunk$set(echo = TRUE)
#install.packages("glmnet")
#install.packages("MLmetrics")
#install.packages("neuralnet")
#install.packages("keras")
#install.packages("mlbench")
#install.packages("magrittr")
#install.packages("tensorflow")
#install.packages("HDCI")
#install.packages("tidyverse")
#install.packages("sringr")
#install.packages(foreach)
library(foreach)
library(glmnet)
library(MLmetrics)
library(neuralnet)
library(keras)
library(mlbench)
library(magrittr)
library(tensorflow)
library(HDCI)
library(reticulate)
library(stringr)
library(parallel)
library(doParallel)
library(tidyverse)
set.seed(02138)
reticulate::py_discover_config()
library(caret)
training   <- data %>%
filter(District != "UDAIPUR")
holdout    <- data %>%
filter(District == "UDAIPUR")
## training
y_train <- training$oos_g_5to14 %>%
as.matrix()
x_train <- training %>%
dplyr::select(colnames(data)[11:ncol(data)]) %>%
as.matrix()
## holdout
y_hold <- holdout$oos_g_5to14 %>%
as.matrix()
x_hold <- holdout %>%
dplyr::select(colnames(data)[11:ncol(data)]) %>%
as.matrix()
## LASSO
cv_model <- train(x = x_train, y = y_train, method = "glmnet")
#relative_imp
ols_model <- train(f_long_c, data = data_rel, method = "lm")
f_long_rhs  <- str_c(coef_lasso[,1], collapse = " + ")
f_long_c    <- as.formula(str_c("oos_g_5to14 ~ ", f_long_rhs))
data_rel <- data[, c("oos_g_5to14",coef_lasso[,1])]
#relative_imp
training   <- data %>%
filter(District != District_list[i])
holdout    <- data %>%
filter(District == District_list[i])
#relative_imp
training   <- data %>%
filter(District != District_list["UDAIPUR"])
holdout    <- data %>%
filter(District == District_list["UDAIPUR"])
ols_model <- train(f_long_c, data = holdout, trControl = training, method = "lm")
#relative_imp
training   <- data %>%
filter(District != District_list["UDAIPUR"])
holdout    <- data %>%
filter(District == District_list["UDAIPUR"])
ols_model <- train(f_long_c, data = holdout, trControl = training, method = "lm")
#relative_imp
training   <- data %>%
filter(District != District_list["UDAIPUR"]) %>%
select(c("oos_g_5to14",coef_lasso[,1]))
coef_lasso[,1]
c("oos_g_5to14",coef_lasso[,1])
MSE_table     <- matrix(NA, nrow = length(unique(data$District)) + 1, ncol = 1) ## spacing
i = 1
## for loop
for(i in 1:14){
training   <- data %>%
filter(District != District_list[i])
holdout    <- data %>%
filter(District == District_list[i])
## training
y_train <- training$oos_g_5to14 %>%
as.matrix()
x_train <- training %>%
select(colnames(data)[11:ncol(data)]) %>%
as.matrix()
## holdout
y_hold <- holdout$oos_g_5to14 %>%
as.matrix()
x_hold <- holdout %>%
select(colnames(data)[11:ncol(data)]) %>%
as.matrix()
## LASSO
cv_model <- cv.glmnet(x = x_train, y = y_train)
#summary(cv_model)
#plot(cv_model)
#coef_lasso <- enframe(coef(cv_model, s="lambda.min")[,1])
pred <- as.data.frame(predict(cv_model, newx = x_hold, s="lambda.min")) %>%
rename(pred = lambda.min) %>%
mutate(pred = ifelse(pred < 0, 0, pred)) %>%
as.matrix()
MSE_table[i,1] <- MSE(pred, y_hold)
print(MSE_table[i,1])
}
knitr::opts_chunk$set(echo = TRUE)
#install.packages("glmnet")
#install.packages("MLmetrics")
#install.packages("neuralnet")
#install.packages("keras")
#install.packages("mlbench")
#install.packages("magrittr")
#install.packages("tensorflow")
#install.packages("HDCI")
#install.packages("tidyverse")
#install.packages("sringr")
#install.packages(foreach)
library(foreach)
library(glmnet)
library(MLmetrics)
library(neuralnet)
library(keras)
library(mlbench)
library(magrittr)
library(tensorflow)
library(HDCI)
library(reticulate)
library(stringr)
library(parallel)
library(doParallel)
library(tidyverse)
set.seed(02138)
reticulate::py_discover_config()
data <- read.csv("https://github.com/KoheiTakata/India/raw/main/data/data.csv") %>%
select(-X) %>%
mutate(num_student = grade1_b + grade1_g + grade2_b + grade2_g + grade3_b + grade3_g +
grade4_b + grade4_g + grade5_b + grade5_b + grade6_b + grade6_g +
grade7_b + grade7_g + grade8_b + grade8_g,
stu_pop     = num_student/tot_p*100)
knitr::opts_chunk$set(echo = TRUE)
#install.packages("glmnet")
#install.packages("MLmetrics")
#install.packages("neuralnet")
#install.packages("keras")
#install.packages("mlbench")
#install.packages("magrittr")
#install.packages("tensorflow")
#install.packages("HDCI")
#install.packages("tidyverse")
#install.packages("sringr")
#install.packages(foreach)
library(foreach)
library(glmnet)
library(MLmetrics)
library(neuralnet)
library(keras)
library(mlbench)
library(magrittr)
library(tensorflow)
library(HDCI)
library(reticulate)
library(stringr)
library(parallel)
library(doParallel)
library(tidyverse)
set.seed(02138)
reticulate::py_discover_config()
data <- read.csv("https://github.com/KoheiTakata/India/raw/main/data/data.csv") %>%
select(-X) %>%
mutate(num_student = grade1_b + grade1_g + grade2_b + grade2_g + grade3_b + grade3_g +
grade4_b + grade4_g + grade5_b + grade5_b + grade6_b + grade6_g +
grade7_b + grade7_g + grade8_b + grade8_g,
stu_pop     = num_student/tot_p*100)
prioritize(dplyr)
#install.packages("MLmetrics")
#install.packages("neuralnet")
#install.packages("keras")
#install.packages("mlbench")
#install.packages("magrittr")
#install.packages("tensorflow")
#install.packages("HDCI")
#install.packages("tidyverse")
#install.packages("sringr")
#install.packages(foreach)
install.packages("needs")
prioritize(dplyr)
library(needs)
library(needs)
prioritize(dplyr)
set.seed(02138)
data <- read.csv("https://github.com/KoheiTakata/India/raw/main/data/data.csv") %>%
select(-X) %>%
mutate(num_student = grade1_b + grade1_g + grade2_b + grade2_g + grade3_b + grade3_g +
grade4_b + grade4_g + grade5_b + grade5_b + grade6_b + grade6_g +
grade7_b + grade7_g + grade8_b + grade8_g,
stu_pop     = num_student/tot_p*100)
#write.csv(data, "data.csv")
District_list  <- unique(data$District)
MSE_table     <- matrix(NA, nrow = length(unique(data$District)) + 1, ncol = 1) ## spacing
i = 1
## for loop
for(i in 1:14){
training   <- data %>%
filter(District != District_list[i])
holdout    <- data %>%
filter(District == District_list[i])
## training
y_train <- training$oos_g_5to14 %>%
as.matrix()
x_train <- training %>%
select(colnames(data)[11:ncol(data)]) %>%
as.matrix()
## holdout
y_hold <- holdout$oos_g_5to14 %>%
as.matrix()
x_hold <- holdout %>%
select(colnames(data)[11:ncol(data)]) %>%
as.matrix()
## LASSO
cv_model <- cv.glmnet(x = x_train, y = y_train)
#summary(cv_model)
#plot(cv_model)
#coef_lasso <- enframe(coef(cv_model, s="lambda.min")[,1])
pred <- as.data.frame(predict(cv_model, newx = x_hold, s="lambda.min")) %>%
rename(pred = lambda.min) %>%
mutate(pred = ifelse(pred < 0, 0, pred)) %>%
as.matrix()
MSE_table[i,1] <- MSE(pred, y_hold)
print(MSE_table[i,1])
}
MSE_table[15,1]<- mean(MSE_table[1:14,1])
MSE_table
# write.csv(MSE_table, "result_LASSO.csv")
training   <- data %>%
filter(District != "UDAIPUR")
holdout    <- data %>%
filter(District == "UDAIPUR")
## training
y_train <- training$oos_g_5to14 %>%
as.matrix()
x_train <- training %>%
dplyr::select(colnames(data)[11:ncol(data)]) %>%
as.matrix()
## holdout
y_hold <- holdout$oos_g_5to14 %>%
as.matrix()
x_hold <- holdout %>%
dplyr::select(colnames(data)[11:ncol(data)]) %>%
as.matrix()
## LASSO
cv_model <- cv.glmnet(x = x_train, y = y_train)
summary(cv_model)
#plot(cv_model)
coef_lasso <- enframe(coef(cv_model, s="lambda.min")[,1]) %>%
filter(value != 0,
name != "(Intercept)") %>%
dplyr::select(name) %>%
as.matrix()
pred <- as.data.frame(predict(cv_model, newx = x_hold, s="lambda.min")) %>%
rename(pred = lambda.min) %>%
mutate(pred = ifelse(pred < 0, 0, pred)) %>%
as.matrix()
plot(x = pred, y = holdout$oos_g_5to14, xlim = c(0, 150), ylim = c(0, 150))
#write.csv(pred, "oosg_udai.csv")
coef_lasso
View(data)
data <- read.csv("https://github.com/KoheiTakata/India/raw/main/data/data.csv") %>%
select(-X) %>%
mutate(num_student = grade1_b + grade1_g + grade2_b + grade2_g + grade3_b + grade3_g +
grade4_b + grade4_g + grade5_b + grade5_b + grade6_b + grade6_g +
grade7_b + grade7_g + grade8_b + grade8_g,
stu_pop     = num_student/tot_p*100) %>%
select(-starts_with("grade"))
MSE_table     <- matrix(NA, nrow = length(unique(data$District)) + 1, ncol = 1) ## spacing
i = 1
## for loop
for(i in 1:14){
training   <- data %>%
filter(District != District_list[i])
holdout    <- data %>%
filter(District == District_list[i])
## training
y_train <- training$oos_g_5to14 %>%
as.matrix()
x_train <- training %>%
select(colnames(data)[11:ncol(data)]) %>%
as.matrix()
## holdout
y_hold <- holdout$oos_g_5to14 %>%
as.matrix()
x_hold <- holdout %>%
select(colnames(data)[11:ncol(data)]) %>%
as.matrix()
## LASSO
cv_model <- cv.glmnet(x = x_train, y = y_train)
#summary(cv_model)
#plot(cv_model)
#coef_lasso <- enframe(coef(cv_model, s="lambda.min")[,1])
pred <- as.data.frame(predict(cv_model, newx = x_hold, s="lambda.min")) %>%
rename(pred = lambda.min) %>%
mutate(pred = ifelse(pred < 0, 0, pred)) %>%
as.matrix()
MSE_table[i,1] <- MSE(pred, y_hold)
print(MSE_table[i,1])
}
MSE_table[15,1]<- mean(MSE_table[1:14,1])
MSE_table
# write.csv(MSE_table, "result_LASSO.csv")
data <- read.csv("https://github.com/KoheiTakata/India/raw/main/data/data.csv") %>%
select(-X) %>%
mutate(num_student = grade1_b + grade1_g + grade2_b + grade2_g + grade3_b + grade3_g +
grade4_b + grade4_g + grade5_b + grade5_b + grade6_b + grade6_g +
grade7_b + grade7_g + grade8_b + grade8_g,
stu_pop     = num_student/tot_p*100) %>%
#write.csv(data, "data.csv")
District_list  <- unique(data$District)
data <- read.csv("https://github.com/KoheiTakata/India/raw/main/data/data.csv") %>%
select(-X) %>%
mutate(num_student = grade1_b + grade1_g + grade2_b + grade2_g + grade3_b + grade3_g +
grade4_b + grade4_g + grade5_b + grade5_b + grade6_b + grade6_g +
grade7_b + grade7_g + grade8_b + grade8_g,
stu_pop     = num_student/tot_p*100)
#write.csv(data, "data.csv")
District_list  <- unique(data$District)
MSE_table     <- matrix(NA, nrow = length(unique(data$District)) + 1, ncol = 1) ## spacing
i = 1
## for loop
for(i in 1:14){
training   <- data %>%
filter(District != District_list[i])
holdout    <- data %>%
filter(District == District_list[i])
## training
y_train <- training$oos_g_5to14 %>%
as.matrix()
x_train <- training %>%
select(colnames(data)[11:ncol(data)]) %>%
as.matrix()
## holdout
y_hold <- holdout$oos_g_5to14 %>%
as.matrix()
x_hold <- holdout %>%
select(colnames(data)[11:ncol(data)]) %>%
as.matrix()
## LASSO
cv_model <- cv.glmnet(x = x_train, y = y_train)
#summary(cv_model)
#plot(cv_model)
#coef_lasso <- enframe(coef(cv_model, s="lambda.min")[,1])
pred <- as.data.frame(predict(cv_model, newx = x_hold, s="lambda.min")) %>%
rename(pred = lambda.min) %>%
mutate(pred = ifelse(pred < 0, 0, pred)) %>%
as.matrix()
MSE_table[i,1] <- MSE(pred, y_hold)
print(MSE_table[i,1])
}
training   <- data %>%
filter(District != "UDAIPUR")
holdout    <- data %>%
filter(District == "UDAIPUR")
## training
y_train <- training$oos_g_5to14 %>%
as.matrix()
x_train <- training %>%
dplyr::select(colnames(data)[11:ncol(data)]) %>%
as.matrix()
## holdout
y_hold <- holdout$oos_g_5to14 %>%
as.matrix()
x_hold <- holdout %>%
dplyr::select(colnames(data)[11:ncol(data)]) %>%
as.matrix()
## LASSO
cv_model <- cv.glmnet(x = x_train, y = y_train)
summary(cv_model)
#plot(cv_model)
coef_lasso <- enframe(coef(cv_model, s="lambda.min")[,1]) %>%
filter(value != 0,
name != "(Intercept)") %>%
dplyr::select(name) %>%
as.matrix()
pred <- as.data.frame(predict(cv_model, newx = x_hold, s="lambda.min")) %>%
rename(pred = lambda.min) %>%
mutate(pred = ifelse(pred < 0, 0, pred)) %>%
as.matrix()
plot(x = pred, y = holdout$oos_g_5to14, xlim = c(0, 150), ylim = c(0, 150))
#write.csv(pred, "oosg_udai.csv")
f_long_rhs  <- str_c(coef_lasso[,1], collapse = " + ")
f_long_c    <- as.formula(str_c("oos_g_5to14 ~ ", f_long_rhs))
data_rel <- data[, c("oos_g_5to14",coef_lasso[,1])]
#relative_imp
training   <- data %>%
filter(District != District_list["UDAIPUR"]) %>%
select(c("oos_g_5to14",coef_lasso[,1]))
holdout    <- data %>%
filter(District == District_list["UDAIPUR"])
ols_model <- train(f_long_c, data = holdout, trControl = training, method = "lm")
f_long_c
ols_model <- train(f_long_c, data = training, method = "lm")
View(training)
training   <- data %>%
filter(District != District_list["UDAIPUR"])
#relative_imp
training   <- data %>%
filter(District != "UDAIPUR") %>%
select(c("oos_g_5to14",coef_lasso[,1]))
holdout    <- data %>%
filter(District == "UDAIPUR")
ols_model <- train(f_long_c, data = training, method = "lm")
registerDoParallel(cl)
ols_model <- train(f_long_c, data = training, method = "lm")
no_cores <- detectCores() - 1
cl <- makePSOCKcluster(no_cores)
B <- 10
pred <- array(data = NA, dim = c(nrow(holdout),B))
registerDoParallel(cl)
start.time<-proc.time()
pred <-  foreach(i = 1:B, .packages='glmnet', .combine='cbind') %dopar% {
boot <- sample(nrow(x_train), nrow(x_train), replace = TRUE)
x_train_boot <- x_train[boot,]
y_train_boot <- y_train[boot,]
cv_model  <- cv.glmnet(x = x_train_boot, y = y_train_boot)
predict(cv_model, newx = x_hold, s="lambda.min")
}
stopCluster(cl)
stop.time<-proc.time()
run.time<-stop.time -start.time
print(run.time)
#write.csv(pred, "pred.csv")
CI <- pred %>%
t() %>%
as.data.frame() %>%
summarize(across(.cols = everything(), list( ~ quantile(., c(0.025, 0.975))))) %>%
t() %>%
as.data.frame() %>%
cbind(oosg_udai) %>%
cbind(holdout$Block) %>%
cbind(holdout$District) %>%
select( c(4, 5, 3, 1, 2)) %>%
`colnames<-`(c("lower", "upper", "mean", "Block", "District"))
library(caret)
#relative_imp
training   <- data %>%
filter(District != "UDAIPUR") %>%
select(c("oos_g_5to14",coef_lasso[,1]))
registerDoParallel(cl)
ols_model <- train(f_long_c, data = training, method = "lm")
stopCluster(cl)
knitr::opts_chunk$set(echo = TRUE)
#install.packages("glmnet")
#install.packages("MLmetrics")
#install.packages("neuralnet")
#install.packages("keras")
#install.packages("mlbench")
#install.packages("magrittr")
#install.packages("tensorflow")
#install.packages("HDCI")
#install.packages("tidyverse")
#install.packages("sringr")
#install.packages(foreach)
#install.packages("needs")
library(foreach)
library(glmnet)
library(MLmetrics)
library(neuralnet)
library(keras)
library(mlbench)
library(magrittr)
library(tensorflow)
library(HDCI)
library(reticulate)
library(stringr)
library(parallel)
library(doParallel)
library(tidyverse)
library(needs)
library(caret)
prioritize(dplyr)
set.seed(02138)
reticulate::py_discover_config()
#install.packages("relaimpo")
#library(relaimpo) #For calculating relative importance of each variables
#f_long_rhs  <- str_c(coef_lasso[,1], collapse = " + ")
#f_long_c    <- as.formula(str_c("oos_g_5to14 ~ ", f_long_rhs))
#data_rel <- data[, c("oos_g_5to14",coef_lasso[,1])]
#relative_imp <- calc.relimp(f_long_c,data=data_rel,
#                   type = c("lmg"), rela = TRUE)
#relative_imp
training   <- data %>%
filter(District != "UDAIPUR") %>%
select(c("oos_g_5to14",coef_lasso[,1]))
holdout    <- data %>%
filter(District == "UDAIPUR")
registerDoParallel(cl)
ols_model <- train(f_long_c, data = training, method = "lm")
